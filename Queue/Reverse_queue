//Reverse the queue
// IP 4 5 6 7 8
// OP 8 7 6 5 4 


queue<int> rev(queue<int> q){
  //s is stack , first ad all the elements in the stack 
   stack<int> s;

   while(!q.empty()){
    int element = q.front();
    q.pop();
    s.push(element);
   }
   //while popping out all of them it will get reversed 
   // time and space complexity = 0(n)
   while(!s.empty){
    int element = s.top();
    s.pop();
    q.push(element);
   }
   return q;
}
